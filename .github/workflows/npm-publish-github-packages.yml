name: Node.js Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - name: Install dependencies
        run: npm ci

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cache:
    runs-on: ubuntu-latest
    steps:
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  deploy-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Environment
        uses: parasoft/deploy-environment-action@1.0.2
        with:
          ctpUrl: ${{ secrets.CTP_URL }}
          ctpUsername: ${{ secrets.CTP_USERNAME }}
          ctpPassword: ${{ secrets.CTP_PASSWORD }}
          system: ${{ secrets.SYSTEM }}
          environment: ${{ secrets.ENVIRONMENT }}
          instance: ${{ secrets.INSTANCE }}

  servicenow-plugin:
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow CI/CD Activate Plugin
        uses: ServiceNow/sncicd-plugin-activate@2.0.0
        with:
          pluginID: ${{ secrets.PLUGIN_ID }}

  cloud-maker-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cloud Maker Deploy
        uses: cloud-maker-ai/github-action-deploy@v1.0.1
        with:
          CLOUD_MAKER_TOKEN: ${{ secrets.CLOUD_MAKER_TOKEN }}
          CLOUD_MAKER_PIPELINE_ID: ${{ secrets.CLOUD_MAKER_PIPELINE_ID }}
          CLOUD_MAKER_STAGE_ID: ${{ secrets.CLOUD_MAKER_STAGE_ID }}

  yor-action:
    runs-on: ubuntu-latest
    steps:
      - name: Yor GitHub Action
        uses: bridgecrewio/yor-action@0.3.0
        with:
          directory: .
          tag_groups: ${{ secrets.TAG_GROUPS }}
          tag: ${{ secrets.TAG }}
          skip_tags: ${{ secrets.SKIP_TAGS }}
          skip_dirs: ${{ secrets.SKIP_DIRS }}
          custom_tags: ${{ secrets.CUSTOM_TAGS }}
          output_format: json
          log_level: info
          commit_changes: true

  rational-integration-tester:
    runs-on: ubuntu-latest
    steps:
      - name: Rational Integration Tester
        uses: IBM/devopsauto-integrtest-actions@v1
        with:
          projectDir: ${{ secrets.PROJECT_DIR }}
          projectName: ${{ secrets.PROJECT_NAME }}
          environment: ${{ secrets.ENVIRONMENT }}
          tests: ${{ secrets.TESTS }}
          parameterFile: ${{ secrets.PARAMETER_FILE }}
          junitDir: ${{ secrets.JUNIT_DIR }}

  scheduled-milestones:
    runs-on: ubuntu-latest
    steps:
      - name: Scheduled Milestones
        uses: readmeio/scheduled-milestones@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Up for Review
          days: Monday,Wednesday,Friday
          date_options: '{"weekday": "long", "year": "numeric", "month": "long", "day": "numeric"}'

  teamwork-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Teamwork GitHub Sync
        uses: Teamwork/github-sync@v1.3.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAMWORK_URI: ${{ secrets.TEAMWORK_URI }}
          TEAMWORK_API_TOKEN: ${{ secrets.TEAMWORK_API_TOKEN }}
          AUTOMATIC_TAGGING: true
          BOARD_COLUMN_OPENED: In Progress
          BOARD_COLUMN_MERGED: Done
          BOARD_COLUMN_CLOSED: Closed
